{"ast":null,"code":"import { EventEmitter, Directive, ElementRef, Input, Output, NgModule } from '@angular/core';\nimport Viewer from 'viewerjs';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nimport * as ɵngcc0 from '@angular/core';\n\nclass NgxViewerDirective {\n  /**\n   * @param {?} elementRef\n   */\n  constructor(elementRef) {\n    this.elementRef = elementRef;\n    this.viewerOptions = {};\n    this.viewerReady = new EventEmitter();\n    this.viewerShow = new EventEmitter();\n    this.viewerShown = new EventEmitter();\n    this.viewerHide = new EventEmitter();\n    this.viewerHidden = new EventEmitter();\n    this.viewerView = new EventEmitter();\n    this.viewerViewed = new EventEmitter();\n    this.viewerZoom = new EventEmitter();\n    this.viewerZoomed = new EventEmitter();\n    this.nativeElement = this.elementRef.nativeElement;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngAfterViewInit() {\n    this.initViewer();\n  }\n  /**\n   * @private\n   * @return {?}\n   */\n\n\n  initViewer() {\n    if (this.instance) {\n      this.instance.destroy();\n    }\n\n    this.instance = new Viewer(this.nativeElement, Object.assign({\n      transition: false\n    }, this.viewerOptions));\n    this.nativeElement.addEventListener('ready',\n    /**\n    * @param {?} event\n    * @return {?}\n    */\n    event => this.viewerReady.emit(event), false);\n    this.nativeElement.addEventListener('show',\n    /**\n    * @param {?} event\n    * @return {?}\n    */\n    event => this.viewerShow.emit(event), false);\n    this.nativeElement.addEventListener('shown',\n    /**\n    * @param {?} event\n    * @return {?}\n    */\n    event => this.viewerShown.emit(event), false);\n    this.nativeElement.addEventListener('hide',\n    /**\n    * @param {?} event\n    * @return {?}\n    */\n    event => this.viewerHide.emit(event), false);\n    this.nativeElement.addEventListener('hidden',\n    /**\n    * @param {?} event\n    * @return {?}\n    */\n    event => this.viewerHidden.emit(event), false);\n    this.nativeElement.addEventListener('view',\n    /**\n    * @param {?} event\n    * @return {?}\n    */\n    event => this.viewerView.emit(event), false);\n    this.nativeElement.addEventListener('viewed',\n    /**\n    * @param {?} event\n    * @return {?}\n    */\n    event => this.viewerViewed.emit(event), false);\n    this.nativeElement.addEventListener('zoom',\n    /**\n    * @param {?} event\n    * @return {?}\n    */\n    event => this.viewerZoom.emit(event), false);\n    this.nativeElement.addEventListener('zoomed',\n    /**\n    * @param {?} event\n    * @return {?}\n    */\n    event => this.viewerZoomed.emit(event), false);\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngOnDestroy() {\n    if (this.instance) {\n      this.instance.destroy();\n    }\n  }\n\n}\n\nNgxViewerDirective.ɵfac = function NgxViewerDirective_Factory(t) {\n  return new (t || NgxViewerDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nNgxViewerDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: NgxViewerDirective,\n  selectors: [[\"\", \"ngxViewer\", \"\"]],\n  inputs: {\n    viewerOptions: \"viewerOptions\"\n  },\n  outputs: {\n    viewerReady: \"viewerReady\",\n    viewerShow: \"viewerShow\",\n    viewerShown: \"viewerShown\",\n    viewerHide: \"viewerHide\",\n    viewerHidden: \"viewerHidden\",\n    viewerView: \"viewerView\",\n    viewerViewed: \"viewerViewed\",\n    viewerZoom: \"viewerZoom\",\n    viewerZoomed: \"viewerZoomed\"\n  }\n});\n/** @nocollapse */\n\nNgxViewerDirective.ctorParameters = () => [{\n  type: ElementRef\n}];\n\nNgxViewerDirective.propDecorators = {\n  viewerOptions: [{\n    type: Input\n  }],\n  viewerReady: [{\n    type: Output\n  }],\n  viewerShow: [{\n    type: Output\n  }],\n  viewerShown: [{\n    type: Output\n  }],\n  viewerHide: [{\n    type: Output\n  }],\n  viewerHidden: [{\n    type: Output\n  }],\n  viewerView: [{\n    type: Output\n  }],\n  viewerViewed: [{\n    type: Output\n  }],\n  viewerZoom: [{\n    type: Output\n  }],\n  viewerZoomed: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxViewerDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ngxViewer]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }];\n  }, {\n    viewerOptions: [{\n      type: Input\n    }],\n    viewerReady: [{\n      type: Output\n    }],\n    viewerShow: [{\n      type: Output\n    }],\n    viewerShown: [{\n      type: Output\n    }],\n    viewerHide: [{\n      type: Output\n    }],\n    viewerHidden: [{\n      type: Output\n    }],\n    viewerView: [{\n      type: Output\n    }],\n    viewerViewed: [{\n      type: Output\n    }],\n    viewerZoom: [{\n      type: Output\n    }],\n    viewerZoomed: [{\n      type: Output\n    }]\n  });\n})();\n\nif (false) {\n  /** @type {?} */\n  NgxViewerDirective.prototype.viewerOptions;\n  /** @type {?} */\n\n  NgxViewerDirective.prototype.viewerReady;\n  /** @type {?} */\n\n  NgxViewerDirective.prototype.viewerShow;\n  /** @type {?} */\n\n  NgxViewerDirective.prototype.viewerShown;\n  /** @type {?} */\n\n  NgxViewerDirective.prototype.viewerHide;\n  /** @type {?} */\n\n  NgxViewerDirective.prototype.viewerHidden;\n  /** @type {?} */\n\n  NgxViewerDirective.prototype.viewerView;\n  /** @type {?} */\n\n  NgxViewerDirective.prototype.viewerViewed;\n  /** @type {?} */\n\n  NgxViewerDirective.prototype.viewerZoom;\n  /** @type {?} */\n\n  NgxViewerDirective.prototype.viewerZoomed;\n  /** @type {?} */\n\n  NgxViewerDirective.prototype.instance;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NgxViewerDirective.prototype.nativeElement;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NgxViewerDirective.prototype.elementRef;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nclass NgxViewerModule {}\n\nNgxViewerModule.ɵfac = function NgxViewerModule_Factory(t) {\n  return new (t || NgxViewerModule)();\n};\n\nNgxViewerModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: NgxViewerModule\n});\nNgxViewerModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxViewerModule, [{\n    type: NgModule,\n    args: [{\n      imports: [],\n      declarations: [NgxViewerDirective],\n      exports: [NgxViewerDirective]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxViewerModule, {\n    declarations: [NgxViewerDirective],\n    exports: [NgxViewerDirective]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { NgxViewerDirective, NgxViewerModule };","map":{"version":3,"sources":["/Users/kevindavilabenavides/Documents/projects/ko-sama/node_modules/ngx-viewer/__ivy_ngcc__/fesm2015/ngx-viewer.js"],"names":["EventEmitter","Directive","ElementRef","Input","Output","NgModule","Viewer","ɵngcc0","NgxViewerDirective","constructor","elementRef","viewerOptions","viewerReady","viewerShow","viewerShown","viewerHide","viewerHidden","viewerView","viewerViewed","viewerZoom","viewerZoomed","nativeElement","ngAfterViewInit","initViewer","instance","destroy","Object","assign","transition","addEventListener","event","emit","ngOnDestroy","ɵfac","NgxViewerDirective_Factory","t","ɵɵdirectiveInject","ɵdir","ɵɵdefineDirective","type","selectors","inputs","outputs","ctorParameters","propDecorators","ngDevMode","ɵsetClassMetadata","args","selector","prototype","NgxViewerModule","NgxViewerModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","declarations","exports","ngJitMode","ɵɵsetNgModuleScope"],"mappings":"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","sourcesContent":["import { EventEmitter, Directive, ElementRef, Input, Output, NgModule } from '@angular/core';\nimport Viewer from 'viewerjs';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nclass NgxViewerDirective {\n    /**\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n        this.elementRef = elementRef;\n        this.viewerOptions = {};\n        this.viewerReady = new EventEmitter();\n        this.viewerShow = new EventEmitter();\n        this.viewerShown = new EventEmitter();\n        this.viewerHide = new EventEmitter();\n        this.viewerHidden = new EventEmitter();\n        this.viewerView = new EventEmitter();\n        this.viewerViewed = new EventEmitter();\n        this.viewerZoom = new EventEmitter();\n        this.viewerZoomed = new EventEmitter();\n        this.nativeElement = this.elementRef.nativeElement;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this.initViewer();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    initViewer() {\n        if (this.instance) {\n            this.instance.destroy();\n        }\n        this.instance = new Viewer(this.nativeElement, Object.assign({ transition: false }, this.viewerOptions));\n        this.nativeElement.addEventListener('ready', (/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => this.viewerReady.emit(event)), false);\n        this.nativeElement.addEventListener('show', (/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => this.viewerShow.emit(event)), false);\n        this.nativeElement.addEventListener('shown', (/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => this.viewerShown.emit(event)), false);\n        this.nativeElement.addEventListener('hide', (/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => this.viewerHide.emit(event)), false);\n        this.nativeElement.addEventListener('hidden', (/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => this.viewerHidden.emit(event)), false);\n        this.nativeElement.addEventListener('view', (/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => this.viewerView.emit(event)), false);\n        this.nativeElement.addEventListener('viewed', (/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => this.viewerViewed.emit(event)), false);\n        this.nativeElement.addEventListener('zoom', (/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => this.viewerZoom.emit(event)), false);\n        this.nativeElement.addEventListener('zoomed', (/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => this.viewerZoomed.emit(event)), false);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.instance) {\n            this.instance.destroy();\n        }\n    }\n}\nNgxViewerDirective.ɵfac = function NgxViewerDirective_Factory(t) { return new (t || NgxViewerDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nNgxViewerDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: NgxViewerDirective, selectors: [[\"\", \"ngxViewer\", \"\"]], inputs: { viewerOptions: \"viewerOptions\" }, outputs: { viewerReady: \"viewerReady\", viewerShow: \"viewerShow\", viewerShown: \"viewerShown\", viewerHide: \"viewerHide\", viewerHidden: \"viewerHidden\", viewerView: \"viewerView\", viewerViewed: \"viewerViewed\", viewerZoom: \"viewerZoom\", viewerZoomed: \"viewerZoomed\" } });\n/** @nocollapse */\nNgxViewerDirective.ctorParameters = () => [\n    { type: ElementRef }\n];\nNgxViewerDirective.propDecorators = {\n    viewerOptions: [{ type: Input }],\n    viewerReady: [{ type: Output }],\n    viewerShow: [{ type: Output }],\n    viewerShown: [{ type: Output }],\n    viewerHide: [{ type: Output }],\n    viewerHidden: [{ type: Output }],\n    viewerView: [{ type: Output }],\n    viewerViewed: [{ type: Output }],\n    viewerZoom: [{ type: Output }],\n    viewerZoomed: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxViewerDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[ngxViewer]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { viewerOptions: [{\n            type: Input\n        }], viewerReady: [{\n            type: Output\n        }], viewerShow: [{\n            type: Output\n        }], viewerShown: [{\n            type: Output\n        }], viewerHide: [{\n            type: Output\n        }], viewerHidden: [{\n            type: Output\n        }], viewerView: [{\n            type: Output\n        }], viewerViewed: [{\n            type: Output\n        }], viewerZoom: [{\n            type: Output\n        }], viewerZoomed: [{\n            type: Output\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    NgxViewerDirective.prototype.viewerOptions;\n    /** @type {?} */\n    NgxViewerDirective.prototype.viewerReady;\n    /** @type {?} */\n    NgxViewerDirective.prototype.viewerShow;\n    /** @type {?} */\n    NgxViewerDirective.prototype.viewerShown;\n    /** @type {?} */\n    NgxViewerDirective.prototype.viewerHide;\n    /** @type {?} */\n    NgxViewerDirective.prototype.viewerHidden;\n    /** @type {?} */\n    NgxViewerDirective.prototype.viewerView;\n    /** @type {?} */\n    NgxViewerDirective.prototype.viewerViewed;\n    /** @type {?} */\n    NgxViewerDirective.prototype.viewerZoom;\n    /** @type {?} */\n    NgxViewerDirective.prototype.viewerZoomed;\n    /** @type {?} */\n    NgxViewerDirective.prototype.instance;\n    /**\n     * @type {?}\n     * @private\n     */\n    NgxViewerDirective.prototype.nativeElement;\n    /**\n     * @type {?}\n     * @private\n     */\n    NgxViewerDirective.prototype.elementRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NgxViewerModule {\n}\nNgxViewerModule.ɵfac = function NgxViewerModule_Factory(t) { return new (t || NgxViewerModule)(); };\nNgxViewerModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgxViewerModule });\nNgxViewerModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxViewerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [],\n                declarations: [NgxViewerDirective],\n                exports: [NgxViewerDirective]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxViewerModule, { declarations: [NgxViewerDirective], exports: [NgxViewerDirective] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { NgxViewerDirective, NgxViewerModule };\n\n"]},"metadata":{},"sourceType":"module"}